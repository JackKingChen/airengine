sampler2D srcColor;
sampler2D sceneColor;

struct VS_INPUT
{
    float4 position     : POSITION;
    float4 color        : COLOR;
    float2 uvCoords     : TEXCOORD;
};

struct VS_OUTPUT
{
    float4  pos          : POSITION0;
    //float4 color        : COLOR;
    float2  texCoord     : TEXCOORD0;
};

struct PS_INPUT
{
    //float4 color        : COLOR;
    float2  texCoord     : TEXCOORD0;
};

struct PS_OUTPUT
{
	float4 color:COLOR;
};

float4x4 projectionMatrix;
 
VS_OUTPUT VSMain(VS_INPUT input)
{
   VS_OUTPUT ouput = (VS_OUTPUT)0;
 
   //input.position.xy = sign( input.position.xy );
   //ouput.pos = float4( input.position.xy, 0.0f, 1.0f );
   ouput.pos = mul(float4( input.position.xyz, 1.0f ), projectionMatrix);
   // get into range [0,1]
   //ouput.texCoord = (float2(ouput.pos.x, -ouput.pos.y) + 1.0f)/2.0f;
   ouput.texCoord = input.uvCoords;
   //ouput.color = input.color;
   
   return ouput;
}

PS_OUTPUT PSColorBurn(PS_INPUT input)
{    
    PS_OUTPUT output = (PS_OUTPUT)0;
	float4 color1 = tex2D(sceneColor, input.texCoord.xy);
	float4 color2 = tex2D(srcColor, input.texCoord.xy);
	output.color.rgb = float3(1.0f, 1.0f, 1.0f) - (float3(1.0f, 1.0f, 1.0f) - color1.rgb) / color2.rgb;
	output.color.a = 1.0f;
	return output;
}

