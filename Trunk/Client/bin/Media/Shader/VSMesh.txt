//模型

#include "VertexDef.txt"

#ifdef RENDER_TO_GBUFFER
matrix viewMatrix;
matrix worldMatrix;
#endif

matrix WorldViewMatrix;
matrix wvpMatrix;

#define VS_INPUT VS_MeshInput 

#ifdef RENDER_TO_SHADOWMAP
#define VS_OUTPUT VS_MeshRenderToShadowmapOutput
#elif defined(RENDER_TO_GBUFFER)
#define VS_OUTPUT VS_MeshRenderToGBufferOutput
#else
  #ifdef SHADOWMAP
matrix LightSpaceProjMatrix;  //在以灯光为视点的投影空间
matrix worldMatrix;
    #ifdef LIGHT_PRE_PASS   
#define VS_OUTPUT VS_MeshLPPWithShadowOutput    //既接受shadowmap也接受lightprepass
    #else  
#define VS_OUTPUT VS_MeshAcceptShadowOutput  //只接受shadowmap
    #endif
  #elif defined(LIGHT_PRE_PASS)  //只接受lightprepass光照
#define VS_OUTPUT VS_MeshLPPOutput
  #else   //什么宏都没定义
#define VS_OUTPUT VS_MeshOutput
  #endif
#endif


VS_OUTPUT VSMain(VS_INPUT input)
{
    VS_OUTPUT   output = (VS_OUTPUT)0;
    
    output.position = mul(float4(input.position.xyz, 1.0), wvpMatrix);
    
    output.texCoords = input.uvCoords;

   
#ifdef RENDER_TO_GBUFFER
    output.DepthInView = mul(input.position, WorldViewMatrix).z; 
    output.normal = mul(float4(input.normal, 0), WorldViewMatrix);
#else
  #ifdef SHADOWMAP
    output.posInLight = mul(input.position, LightSpaceProjMatrix);   //这里会有问题
    output.posWorld = mul(input.position, worldMatrix);
    #ifdef LIGHT_PRE_PASS
    // 既接收shadowmap也接收lpp
    output.posProj = output.position;
    #endif
  #else
    #ifdef LIGHT_PRE_PASS
    output.posProj = output.position;
    #else
      
    #endif
    
  #endif

  #ifndef RENDER_TO_SHADOWMAP
    output.color = input.color;
  #endif
#endif
    
    return output;
}